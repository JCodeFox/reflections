6. How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed me what changed so there for I could ignore the other lines.

8. How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It allows you to compare your current version to an old version to see what
    changed and possibly what caused an error.

15. What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Some pros are  being able to save everytime you are done with a change,
    and being able to keep just the right amount of saves.
    Some cons are not saving often enough, and saving too often.

18. Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It helps in the case that the files effect eachother, because if they were
    you would have to compare each file seperately.

22. How can you use the commands git log and git diff to view the history of files?

    git log list all the commits ever made to a repository, and
    git diff will compare two commits to eachother.

26. How might using version control make you more confident to make changes that
could break something?

    It allows you to go back to an old version if you make a mistake, and therefore
    allows you to fix it.

31. Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it to store files for video game code.